# Assumption that this makefile is run from the root of `albert`
MODULE_NAME=albert
BR_EXT=BR2_EXTERNAL=$(PWD)/br-ext-tree

build-dev: $(MODULE_NAME)-create-dev-defconfig
	@make defconfig=$(MODULE_NAME)_dev_defconfig build-image

build:
	@make build-image defconfig=$(MODULE_NAME)_defconfig

build-image: buildroot/.git
	# cd buildroot/ && git reset --hard
	# config
	@make $(defconfig)
	# Rebuild project
	@make $(MODULE_NAME)-rebuild
	# Run build
	cd buildroot && make $(BR_EXT)
	@make check

check:
	ls buildroot/output/build/$(MODULE_NAME)-ui-0.0.2
	ls buildroot/output/target/usr/bin/$(MODULE_NAME)-ui

flash: buildroot/output/images/sdcard.img
	stat -c %y buildroot/output/images/sdcard.img
	dd bs=5M if=buildroot/output/images/sdcard.img of=/dev/sdc conv=fsync

# If submodule is not initialized, initialzie it
buildroot/.git:
	git submodule update --init

$(MODULE_NAME)-create-dev-defconfig:
	cd br-ext-tree/configs && \
		echo "# === AUTOGENERATED FILE ============" > $(MODULE_NAME)_dev_defconfig && \
		echo "# Edit input files then run make $@" >> $(MODULE_NAME)_dev_defconfig && \
		echo "# to regenerate this file" >> $(MODULE_NAME)_dev_defconfig && \
		cat $(MODULE_NAME)_defconfig dev_defconfig.partial >> $(MODULE_NAME)_dev_defconfig

# Removes cached build and runs rebuild
$(MODULE_NAME)-rebuild:
	cd buildroot && make $(MODULE_NAME)-ui-dirclean $(BR_EXT)
	cd buildroot && make $(MODULE_NAME)-ui-rebuild $(BR_EXT)

barebox-menuconfig linux-menuconfig menuconfig uboot-menuconfig savedefconfig $(MODULE_NAME)_defconfig $(MODULE_NAME)_dev_defconfig:
	@echo $(BR_EXT)
	cd buildroot && make $@ $(BR_EXT)

run:
	cd br-ext-tree/package/$(MODULE_NAME)-ui && make $@

clean:
	cd buildroot && make clean
